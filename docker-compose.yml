services:
  nats-servers:
    image: nats:latest
    ports:
      - "4222:4222"
    networks:
      - laucher-app-dev
    restart: always

  client-gateway:
    image: client-gateway
    build:
      context: ./client-gateway
      dockerfile: dockerfile.prod
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - NATS_SERVERS=nats://nats-servers:4222
    depends_on:
      - nats-servers
    restart: unless-stopped
    networks:
      - laucher-app-dev

  auth-db:
    image: postgres:15-alpine
    environment:
      # - POSTGRES_USER=${POSTGRES_USER_AUTH_ENV}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_AUTH_ENV}
      - POSTGRES_DB=${POSTGRES_DB_AUTH_ENV}
    volumes:
      - auth-db-data-dev:/var/lib/postgresql/data
    restart: always
    networks:
      - laucher-app-dev

  auth-ms:
    image: auth-ms
    build:
      context: ./microservices/auth-ms
      dockerfile: dockerfile.prod
    environment:
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD_AUTH_ENV}@auth-db:5432/${POSTGRES_DB_AUTH_ENV}?schema=public&sslmode=disable
      - NATS_SERVERS=nats://nats-servers:4222
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - auth-db
    restart: always
    networks:
      - laucher-app-dev

  product-db:
    image: postgres:15-alpine
    environment:
      # - POSTGRES_USER=${POSTGRES_USER_PRODUCTS_ENV}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_PRODUCTS_ENV}
      - POSTGRES_DB=${POSTGRES_DB_PRODUCTS_ENV}
    volumes:
      - product-db-data-dev:/var/lib/postgresql/data
    restart: always
    networks:
      - laucher-app-dev

  products-ms:
    image: products-ms
    build:
      context: ./microservices/products-ms
      dockerfile: dockerfile.prod
    environment:
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD_PRODUCTS_ENV}@product-db:5432/${POSTGRES_DB_PRODUCTS_ENV}?schema=public&sslmode=disable
      - NATS_SERVERS=nats://nats-servers:4222
    depends_on:
      - product-db
    restart: unless-stopped
    networks:
      - laucher-app-dev

  contacts-db:
    image: postgres:15-alpine
    environment:
      # - POSTGRES_USER=${POSTGRES_USER_CONTACTS_ENV}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_CONTACTS_ENV}
      - POSTGRES_DB=${POSTGRES_DB_CONTACTS_ENV}
    volumes:
      - contacts-db-data-dev:/var/lib/postgresql/data
    restart: always
    networks:
      - laucher-app-dev

  contacts-ms:
    image: contacts-ms
    build:
      context: ./microservices/contacts-ms
      dockerfile: dockerfile.prod
    environment:
      - PORT=3005
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD_CONTACTS_ENV}@contacts-db:5432/${POSTGRES_DB_CONTACTS_ENV}?schema=public&sslmode=disable
      - NATS_SERVERS=nats://nats-servers:4222
    depends_on:
      - contacts-db
    restart: unless-stopped
    networks:
      - laucher-app-dev

  branches-db:
    image: postgres:15-alpine
    environment:
      # - POSTGRES_USER=${POSTGRES_USER_BRANCHES_ENV}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_BRANCHES_ENV}
      - POSTGRES_DB=${POSTGRES_DB_BRANCHES_ENV}
    volumes:
      - branches-db-data-dev:/var/lib/postgresql/data
    restart: always
    networks:
      - laucher-app-dev

  branches-ms:
    image: branches-ms
    build:
      context: ./microservices/branches-ms
      dockerfile: dockerfile.prod
    environment:
      - PORT=3003
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD_BRANCHES_ENV}@branches-db:5432/${POSTGRES_DB_BRANCHES_ENV}?schema=public&sslmode=disable
      - NATS_SERVERS=nats://nats-servers:4222
    depends_on:
      - branches-db
    restart: unless-stopped
    networks:
      - laucher-app-dev

  voucher-db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      # - POSTGRES_USER=${POSTGRES_USER_VOUCHER_ENV}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_VOUCHER_ENV}
      - POSTGRES_DB=${POSTGRES_DB_VOUCHER_ENV}
    volumes:
      - voucher-db-data-dev:/var/lib/postgresql/data
    restart: always
    networks:
      - laucher-app-dev

  voucher-ms:
    image: voucher-ms
    build:
      context: ./microservices/voucher-ms
      dockerfile: dockerfile.prod
    environment:
      - PORT=3006
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD_VOUCHER_ENV}@voucher-db:5432/${POSTGRES_DB_VOUCHER_ENV}?schema=public&sslmode=disable
      - NATS_SERVERS=nats://nats-servers:4222
    depends_on:
      - voucher-db
    restart: unless-stopped
    networks:
      - laucher-app-dev

  frontend:
    image: frontend
    build:
      context: ./frontend
      dockerfile: dockerfile.prod
    ports:
      - "5173:5173" # o 3006:80 si us√°s otro puerto
    networks:
      - laucher-app-dev
    depends_on:
      - client-gateway

networks:
  laucher-app-dev:
    driver: bridge

volumes:
  auth-db-data-dev:
  product-db-data-dev:
  contacts-db-data-dev:
  branches-db-data-dev:
  voucher-db-data-dev:
