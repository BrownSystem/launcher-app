name: Build, Push & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          [
            auth-ms,
            branches-ms,
            contacts-ms,
            products-ms,
            voucher-ms,
            client-gateway,
            frontend,
            app-mobile,
          ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive # 👈 muy importante para traer microservices

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push ${{ matrix.service }}
        uses: docker/build-push-action@v4
        with:
          context: ${{matrix.service == 'app-mobile' && './app-mobile' || matrix.service == 'frontend' && './frontend' || matrix.service == 'client-gateway' && './client-gateway' || format('./microservices/{0}', matrix.service) }}
          file: ${{matrix.service == 'app-mobile' && './app-mobile/dockerfile.prod' || matrix.service == 'frontend' && './frontend/dockerfile.prod' || matrix.service == 'client-gateway' && './client-gateway/dockerfile.prod' || format('./microservices/{0}/dockerfile.prod', matrix.service) }}
          push: true
          tags: |
            noinblake/${{ matrix.service }}:v1

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan -p ${{ secrets.SERVER_PORT }} -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Upload docker-compose and env
        run: |
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p /root/bosque"
          scp -P ${{ secrets.SERVER_PORT }} docker-compose.prod.yml .env ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/root/bosque/

      - name: Login to Docker Hub on server
        run: |
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << EOF
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          EOF

      - name: Deploy with Docker Compose
        run: |
          ssh -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd /root/bosque
            docker compose -f docker-compose.prod.yml pull || { echo "❌ Compose pull failed"; exit 1; }
            docker compose -f docker-compose.prod.yml up -d || { echo "❌ Compose up failed"; exit 1; }
          EOF
